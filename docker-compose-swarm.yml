version: "3"

services:
  server:
    image: ${IMAGE_SERVER}
    ports:
      - 7001:7001
    networks: 
      - overlay
    depends_on:
      - database
    environment:
      - DATABASE_HOST=${DATABASE_HOST}
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints: [node.role == worker] 
    command: npm run start_on_docker

  database:
    image: ${IMAGE_DB}
    ports:
      - "3306:3306"
    networks:
      - overlay
    volumes:
      - db-data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
    deploy:
      restart_policy:
        condition: on-failure
      placement:
        constraints: [node.role == manager] 

  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - "8080:8080"
    stop_grace_period: 1m30s
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: [node.role == manager]

volumes:
  db-data:
networks:
  overlay: